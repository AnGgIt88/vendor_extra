From 26a488836d303f9d5a3bc665c0de17e96ccba199 Mon Sep 17 00:00:00 2001
From: jhenrique09 <jhenrique09.mcz@hotmail.com>
Date: Sun, 7 Mar 2021 01:26:34 -0300
Subject: [PATCH 5/5] Allow using face as auth method for apps

Change-Id: Ib259d1f020f9ac29a9d85ae7edba55a2b2daa101
---
 res/values/cm_strings.xml                          |  2 --
 .../face/FaceSettingsAppPreferenceController.java  |  6 ------
 .../FaceSettingsFooterPreferenceController.java    | 14 ++++----------
 ...ceSettingsRemoveButtonPreferenceController.java |  9 +--------
 4 files changed, 5 insertions(+), 26 deletions(-)

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index e0c4b617d6..f49ce8de0e 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -172,8 +172,6 @@
     <string name="lockscreen_battery_info_summary">Display negociated charger max current and voltage and battery temperature on lockscreen while charging</string>
 
     <!-- Face Unlock -->
-    <string name="security_settings_face_settings_footer_custom">Face unlock lets you unlock your device by looking at it. Keep in mind:\n\n● Your device may unlock any time you look at it.\n● Your device can be unlocked by someone else if they hold it in front of your face while your eyes are open.\n● Your device may also be unlocked by someone who looks a lot like you, such as a child or identical sibling.</string>
-    <string name="security_settings_face_settings_remove_dialog_details_custom">Data recorded by face unlock will be permanently and securely deleted. After removal, you will need your PIN, pattern, or password to unlock your phone.</string>
     <string name="security_settings_face_unlock_redo_face_scan_summary">Remove existing face scan and create a new scan</string>
     <string name="security_settings_face_unlock_redo_face_scan_title">Redo face scan</string>
     <string name="security_dashboard_summary_face_and_fingerprint">Screen lock, fingerprint, face unlock</string>
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsAppPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsAppPreferenceController.java
index 1d8325c70e..bde146b19c 100644
--- a/src/com/android/settings/biometrics/face/FaceSettingsAppPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceSettingsAppPreferenceController.java
@@ -26,8 +26,6 @@ import androidx.preference.Preference;
 
 import com.android.settings.Utils;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Preference controller for Face settings page controlling the ability to use
  * Face authentication in apps (through BiometricPrompt).
@@ -80,10 +78,6 @@ public class FaceSettingsAppPreferenceController extends FaceSettingsPreferenceC
 
     @Override
     public int getAvailabilityStatus() {
-        if (FaceUtils.isFaceUnlockSupported()){
-            return UNSUPPORTED_ON_DEVICE;
-        }
-
         if(mFaceManager == null){
             return AVAILABLE_UNSEARCHABLE;
         }
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsFooterPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsFooterPreferenceController.java
index 57b56e7f0d..c66546790e 100644
--- a/src/com/android/settings/biometrics/face/FaceSettingsFooterPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceSettingsFooterPreferenceController.java
@@ -28,8 +28,6 @@ import com.android.settings.utils.AnnotationSpan;
 import com.android.settingslib.HelpUtils;
 import com.android.settingslib.widget.FooterPreference;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Footer for face settings showing the help text and help link.
  */
@@ -62,14 +60,10 @@ public class FaceSettingsFooterPreferenceController extends BasePreferenceContro
         final AnnotationSpan.LinkInfo linkInfo =
                 new AnnotationSpan.LinkInfo(mContext, ANNOTATION_URL, helpIntent);
 
-        final int footerRes;
-        if (FaceUtils.isFaceUnlockSupported()) {
-            footerRes = R.string.security_settings_face_settings_footer_custom;
-        } else if (mProvider.isAttentionSupported(mContext)) {
-            footerRes = R.string.security_settings_face_settings_footer;
-        } else {
-            footerRes = R.string.security_settings_face_settings_footer_attention_not_supported;
-        }
+        final int footerRes = mProvider.isAttentionSupported(mContext)
+                ? R.string.security_settings_face_settings_footer
+                : R.string.security_settings_face_settings_footer_attention_not_supported;
+
         preference.setTitle(AnnotationSpan.linkify(
                 mContext.getText(footerRes), linkInfo));
     }
diff --git a/src/com/android/settings/biometrics/face/FaceSettingsRemoveButtonPreferenceController.java b/src/com/android/settings/biometrics/face/FaceSettingsRemoveButtonPreferenceController.java
index 1d1b55796d..6e594a5002 100644
--- a/src/com/android/settings/biometrics/face/FaceSettingsRemoveButtonPreferenceController.java
+++ b/src/com/android/settings/biometrics/face/FaceSettingsRemoveButtonPreferenceController.java
@@ -39,8 +39,6 @@ import com.android.settingslib.widget.LayoutPreference;
 
 import java.util.List;
 
-import com.android.settings.custom.biometrics.FaceUtils;
-
 /**
  * Controller for the remove button. This assumes that there is only a single face enrolled. The UI
  * will likely change if multiple enrollments are allowed/supported.
@@ -64,13 +62,8 @@ public class FaceSettingsRemoveButtonPreferenceController extends BasePreference
         public Dialog onCreateDialog(Bundle savedInstanceState) {
             AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
 
-            int dialogMessage = R.string.security_settings_face_settings_remove_dialog_details;
-            if (FaceUtils.isFaceUnlockSupported()) {
-                dialogMessage = R.string.security_settings_face_settings_remove_dialog_details_custom;
-            }
-
             builder.setTitle(R.string.security_settings_face_settings_remove_dialog_title)
-                    .setMessage(dialogMessage)
+                    .setMessage(R.string.security_settings_face_settings_remove_dialog_details)
                     .setPositiveButton(R.string.delete, mOnClickListener)
                     .setNegativeButton(R.string.cancel, mOnClickListener);
             AlertDialog dialog = builder.create();
-- 
2.31.1.606.gdf6c4f722c

