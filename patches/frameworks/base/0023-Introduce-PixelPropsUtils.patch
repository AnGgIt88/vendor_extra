From 3e4e30cbbf88a33583bb9457d94a404d28be0c96 Mon Sep 17 00:00:00 2001
From: jhenrique09 <jhenrique09.mcz@hotmail.com>
Date: Thu, 19 Nov 2020 20:46:32 -0300
Subject: [PATCH 23/27] Introduce PixelPropsUtils

That will spoof build fingerprints on some g00gle apps

* Also will enable some cool stuffs like:
  - Dynamic navbar on GBoard
  - SafetyHub

and others.

Thanks to @ kdrag0n for the original idea at https://github.com/ProtonAOSP/android_frameworks_base/commit/5a54bfd846c7a26ba4820a361a6fec779edf8c5a

Change-Id: I1078e7402833fec77edb751070c5144d08c85b6c
Signed-off-by: jhenrique09 <jhenrique09.mcz@hotmail.com>
Co-authored-by: Danny Lin <danny@kdrag0n.dev>
Co-authored-by: Joey Huab <joey@evolution-x.org>
---
 core/java/com/android/internal/os/Zygote.java |   5 +
 .../internal/util/custom/PixelPropsUtils.java | 123 ++++++++++++++++++
 2 files changed, 128 insertions(+)
 create mode 100644 core/java/com/android/internal/util/custom/PixelPropsUtils.java

diff --git a/core/java/com/android/internal/os/Zygote.java b/core/java/com/android/internal/os/Zygote.java
index a7d9827855a..993717109df 100644
--- a/core/java/com/android/internal/os/Zygote.java
+++ b/core/java/com/android/internal/os/Zygote.java
@@ -47,6 +47,8 @@ import java.io.FileDescriptor;
 import java.io.IOException;
 import java.io.InputStreamReader;
 
+import com.android.internal.util.custom.PixelPropsUtils;
+
 /** @hide */
 public final class Zygote {
     /*
@@ -794,6 +796,9 @@ public final class Zygote {
         } else {
             Log.w(loggingTag, "Unable to set package name.");
         }
+
+        // Set pixel props
+        PixelPropsUtils.setProps(args.mPackageName);
     }
 
     private static final String USAP_ERROR_PREFIX = "Invalid command to USAP: ";
diff --git a/core/java/com/android/internal/util/custom/PixelPropsUtils.java b/core/java/com/android/internal/util/custom/PixelPropsUtils.java
new file mode 100644
index 00000000000..4f6663c64d1
--- /dev/null
+++ b/core/java/com/android/internal/util/custom/PixelPropsUtils.java
@@ -0,0 +1,123 @@
+/*
+ * Copyright (C) 2020 The Pixel Experience Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.android.internal.util.custom;
+
+import android.os.Build;
+import android.util.Log;
+
+import java.util.Arrays;
+import java.lang.reflect.Field;
+import java.util.HashMap;
+import java.util.Map;
+
+public class PixelPropsUtils {
+
+    private static final String TAG = PixelPropsUtils.class.getSimpleName();
+    private static final boolean DEBUG = false;
+
+    private static final Map<String, Object> propsToChange;
+    private static final Map<String, Object> propsToChangePixel3XL;
+
+    private static final String[] packagesToChange = {
+            "com.breel.wallpapers20",
+            "com.google.android.apps.customization.pixel",
+            "com.google.android.apps.fitness",
+            "com.google.android.apps.photos",
+            "com.google.android.apps.recorder",
+            "com.google.android.apps.subscriptions.red",
+            "com.google.android.apps.tachyon",
+            "com.google.android.apps.turboadapter",
+            "com.google.android.apps.wallpaper.pixel",
+            "com.google.android.as",
+            "com.google.android.dialer",
+            "com.google.android.gms.location.history",
+            "com.google.android.inputmethod.latin",
+            "com.google.android.soundpicker",
+            "com.google.pixel.dynamicwallpapers",
+            "com.google.pixel.livewallpaper",
+            "com.google.android.apps.safetyhub",
+            "com.google.android.apps.turbo",
+            "com.google.android.apps.wallpaper",
+            "com.google.android.apps.maps",
+            "com.google.android.gms",
+            "com.google.android.apps.nexuslauncher"
+    };
+
+    private static final String[] packagesToChangePixel3XL = {
+            "com.google.android.googlequicksearchbox"
+    };
+
+    static {
+        propsToChange = new HashMap<>();
+        propsToChange.put("BRAND", "google");
+        propsToChange.put("MANUFACTURER", "Google");
+        propsToChange.put("DEVICE", "redfin");
+        propsToChange.put("PRODUCT", "redfin");
+        propsToChange.put("MODEL", "Pixel 5");
+        propsToChange.put("FINGERPRINT", "google/redfin/redfin:11/RQ2A.210505.003/7255357:user/release-keys");
+        propsToChangePixel3XL = new HashMap<>();
+        propsToChangePixel3XL.put("BRAND", "google");
+        propsToChangePixel3XL.put("MANUFACTURER", "Google");
+        propsToChangePixel3XL.put("DEVICE", "crosshatch");
+        propsToChangePixel3XL.put("PRODUCT", "crosshatch");
+        propsToChangePixel3XL.put("MODEL", "Pixel 3 XL");
+        propsToChangePixel3XL.put("FINGERPRINT", "google/crosshatch/crosshatch:11/RQ2A.210505.002/7246365:user/release-keys");
+    }
+
+    public static void setProps(String packageName) {
+        if (packageName == null){
+            return;
+        }
+        if (Arrays.asList(packagesToChange).contains(packageName)){
+            if (DEBUG){
+                Log.d(TAG, "Defining props for: " + packageName);
+            }
+            for (Map.Entry<String, Object> prop : propsToChange.entrySet()) {
+                String key = prop.getKey();
+                Object value = prop.getValue();
+                setPropValue(key, value);
+            }
+        }
+        if (Arrays.asList(packagesToChangePixel3XL).contains(packageName)){
+            if (DEBUG){
+                Log.d(TAG, "Defining props for: " + packageName);
+            }
+            for (Map.Entry<String, Object> prop : propsToChangePixel3XL.entrySet()) {
+                String key = prop.getKey();
+                Object value = prop.getValue();
+                setPropValue(key, value);
+            }
+        }
+        // Set proper indexing fingerprint
+        if (packageName.equals("com.google.android.settings.intelligence")){
+            setPropValue("FINGERPRINT", Build.DATE);
+        }
+    }
+
+    private static void setPropValue(String key, Object value){
+        try {
+            if (DEBUG){
+                Log.d(TAG, "Defining prop " + key + " to " + value.toString());
+            }
+            Field field = Build.class.getDeclaredField(key);
+            field.setAccessible(true);
+            field.set(null, value);
+            field.setAccessible(false);
+        } catch (NoSuchFieldException | IllegalAccessException e) {
+            Log.e(TAG, "Failed to set prop " + key, e);
+        }
+    }
+}
-- 
2.31.1.606.gdf6c4f722c

