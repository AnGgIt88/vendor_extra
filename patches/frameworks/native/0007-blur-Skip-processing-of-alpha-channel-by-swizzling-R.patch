From 2d3bbe353ab93cc700e89e9df19162c2d714cdde Mon Sep 17 00:00:00 2001
From: Danny Lin <danny@kdrag0n.dev>
Date: Wed, 14 Apr 2021 01:33:26 -0700
Subject: [PATCH 07/14] blur: Skip processing of alpha channel by swizzling RGB
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This reduces ALU utilization by avoiding unnecessary calculations that
are discarded in the final fragment color. This saves ~100 Âµs in another
6-pass blur implementation.

Change-Id: I4ec24518eefce369dbb592ac03a14caeea86df9a
---
 libs/renderengine/gl/filters/BlurFilter.cpp | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/libs/renderengine/gl/filters/BlurFilter.cpp b/libs/renderengine/gl/filters/BlurFilter.cpp
index 4bb011388..aae5baa8d 100644
--- a/libs/renderengine/gl/filters/BlurFilter.cpp
+++ b/libs/renderengine/gl/filters/BlurFilter.cpp
@@ -232,13 +232,13 @@ string BlurFilter::getFragmentShader() const {
         out vec4 fragColor;
 
         void main() {
-            fragColor  = texture(uTexture, vUV, 0.0);
-            fragColor += texture(uTexture, vUV + vec2( uOffset.x,  uOffset.y), 0.0);
-            fragColor += texture(uTexture, vUV + vec2( uOffset.x, -uOffset.y), 0.0);
-            fragColor += texture(uTexture, vUV + vec2(-uOffset.x,  uOffset.y), 0.0);
-            fragColor += texture(uTexture, vUV + vec2(-uOffset.x, -uOffset.y), 0.0);
+            vec3 sum = texture(uTexture, vUV).rgb;
+            sum += texture(uTexture, vUV + vec2( uOffset.x,  uOffset.y)).rgb;
+            sum += texture(uTexture, vUV + vec2( uOffset.x, -uOffset.y)).rgb;
+            sum += texture(uTexture, vUV + vec2(-uOffset.x,  uOffset.y)).rgb;
+            sum += texture(uTexture, vUV + vec2(-uOffset.x, -uOffset.y)).rgb;
 
-            fragColor = vec4(fragColor.rgb * 0.2, 1.0);
+            fragColor = vec4(sum * 0.2, 1.0);
         }
     )SHADER";
 }
@@ -255,9 +255,9 @@ string BlurFilter::getMixFragShader() const {
         uniform float uBlurOpacity;
 
         void main() {
-            vec4 blurred = texture(uBlurTexture, vUV);
-            vec4 composition = texture(uCompositionTexture, vUV);
-            fragColor = mix(composition, blurred, uBlurOpacity);
+            vec3 blurred = texture(uBlurTexture, vUV).rgb;
+            vec3 composition = texture(uCompositionTexture, vUV).rgb;
+            fragColor = vec4(mix(composition, blurred, uBlurOpacity), 1.0);
         }
     )SHADER";
     return shader;
-- 
2.31.1.606.gdf6c4f722c

