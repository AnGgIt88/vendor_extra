From c61ffec82d4d6c5440b6b2f307365c43c05bf390 Mon Sep 17 00:00:00 2001
From: Danny Lin <danny@kdrag0n.dev>
Date: Mon, 12 Apr 2021 20:26:50 -0700
Subject: [PATCH 06/14] blur: Improve terminology used in mix shader

This improved terminology helps clarify what each uniform refers to,
which will become more important once we add dithering.

Change-Id: I607a08b63c6370d091412905d32bd7d89ae71769
---
 libs/renderengine/gl/filters/BlurFilter.cpp | 20 ++++++++++----------
 libs/renderengine/gl/filters/BlurFilter.h   |  4 ++--
 2 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/libs/renderengine/gl/filters/BlurFilter.cpp b/libs/renderengine/gl/filters/BlurFilter.cpp
index 19f18c0a7..4bb011388 100644
--- a/libs/renderengine/gl/filters/BlurFilter.cpp
+++ b/libs/renderengine/gl/filters/BlurFilter.cpp
@@ -40,9 +40,9 @@ BlurFilter::BlurFilter(GLESRenderEngine& engine)
     mMixProgram.compile(getVertexShader(), getMixFragShader());
     mMPosLoc = mMixProgram.getAttributeLocation("aPosition");
     mMUvLoc = mMixProgram.getAttributeLocation("aUV");
-    mMTextureLoc = mMixProgram.getUniformLocation("uTexture");
+    mMBlurTextureLoc = mMixProgram.getUniformLocation("uBlurTexture");
     mMCompositionTextureLoc = mMixProgram.getUniformLocation("uCompositionTexture");
-    mMMixLoc = mMixProgram.getUniformLocation("uMix");
+    mMBlurOpacityLoc = mMixProgram.getUniformLocation("uBlurOpacity");
 
     mBlurProgram.compile(getVertexShader(), getFragmentShader());
     mBPosLoc = mBlurProgram.getAttributeLocation("aPosition");
@@ -176,12 +176,12 @@ status_t BlurFilter::render(bool multiPass) {
 
     // Now let's scale our blur up. It will be interpolated with the larger composited
     // texture for the first frames, to hide downscaling artifacts.
-    GLfloat mix = fmin(1.0, mRadius / kMaxCrossFadeRadius);
+    GLfloat opacity = fmin(1.0, mRadius / kMaxCrossFadeRadius);
 
     // When doing multiple passes, we cannot try to read mCompositionFbo, given that we'll
     // be writing onto it. Let's disable the crossfade, otherwise we'd need 1 extra frame buffer,
     // as large as the screen size.
-    if (mix >= 1 || multiPass) {
+    if (opacity >= 1 || multiPass) {
         mLastDrawTarget->bindAsReadBuffer();
         glBlitFramebuffer(0, 0, mLastDrawTarget->getBufferWidth(),
                           mLastDrawTarget->getBufferHeight(), mDisplayX, mDisplayY, mDisplayWidth,
@@ -190,10 +190,10 @@ status_t BlurFilter::render(bool multiPass) {
     }
 
     mMixProgram.useProgram();
-    glUniform1f(mMMixLoc, mix);
+    glUniform1f(mMBlurOpacityLoc, opacity);
     glActiveTexture(GL_TEXTURE0);
     glBindTexture(GL_TEXTURE_2D, mLastDrawTarget->getTextureName());
-    glUniform1i(mMTextureLoc, 0);
+    glUniform1i(mMBlurTextureLoc, 0);
     glActiveTexture(GL_TEXTURE1);
     glBindTexture(GL_TEXTURE_2D, mCompositionFbo.getTextureName());
     glUniform1i(mMCompositionTextureLoc, 1);
@@ -251,13 +251,13 @@ string BlurFilter::getMixFragShader() const {
         out vec4 fragColor;
 
         uniform sampler2D uCompositionTexture;
-        uniform sampler2D uTexture;
-        uniform float uMix;
+        uniform sampler2D uBlurTexture;
+        uniform float uBlurOpacity;
 
         void main() {
-            vec4 blurred = texture(uTexture, vUV);
+            vec4 blurred = texture(uBlurTexture, vUV);
             vec4 composition = texture(uCompositionTexture, vUV);
-            fragColor = mix(composition, blurred, uMix);
+            fragColor = mix(composition, blurred, uBlurOpacity);
         }
     )SHADER";
     return shader;
diff --git a/libs/renderengine/gl/filters/BlurFilter.h b/libs/renderengine/gl/filters/BlurFilter.h
index 593a8fd54..3f7a1d46d 100644
--- a/libs/renderengine/gl/filters/BlurFilter.h
+++ b/libs/renderengine/gl/filters/BlurFilter.h
@@ -79,8 +79,8 @@ private:
     GenericProgram mMixProgram;
     GLuint mMPosLoc;
     GLuint mMUvLoc;
-    GLuint mMMixLoc;
-    GLuint mMTextureLoc;
+    GLuint mMBlurOpacityLoc;
+    GLuint mMBlurTextureLoc;
     GLuint mMCompositionTextureLoc;
 
     GenericProgram mBlurProgram;
-- 
2.31.1.606.gdf6c4f722c

